{"version":3,"file":"customizer-preview.js","mappings":";;;;;AAAA;AACA;AACA;AACA,IAAKA,SAAS,KAAKC,yBAAd,IAA2CD,SAAS,KAAKC,yBAAyB,CAACC,YAAxF,EAAuG;AACtG;AACD;AACA;AACA;AACA;AACA;AACA;AACC,QAAMC,cAAc,GAAG,UAAUC,GAAV,EAAeC,KAAf,EAAsBC,QAAtB,EAAiC;AACvD,UAAMC,OAAO,GAAG,gCAAgCH,GAAhD;AACA,UAAMI,QAAQ,GAAG,EAAjB;AACA,QAAIC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAyBJ,OAAzB,CAAb;AACA,QAAIK,GAAG,GAAG,EAAV,CAJuD,CAMvD;;AACA,QAAK,CAAEH,MAAP,EAAgB;AACfA,MAAAA,MAAM,GAAGC,QAAQ,CAACG,aAAT,CAAwB,OAAxB,CAAT;AACAJ,MAAAA,MAAM,CAACK,EAAP,GAAYP,OAAZ;AACAE,MAAAA,MAAM,CAACM,IAAP,GAAc,UAAd,CAHe,CAKf;;AACAL,MAAAA,QAAQ,CAACM,IAAT,CAAcC,WAAd,CAA2BR,MAA3B;AACA;;AAED,QAAIS,KAAK,GAAGZ,QAAZ,CAhBuD,CAkBvD;;AACA,QAAKa,KAAK,CAACC,OAAN,CAAeF,KAAf,CAAL,EAA8B;AAC7B,UAAK,OAAOA,KAAK,CAACG,IAAN,CAAY,EAAZ,EAAiBC,IAAjB,EAAZ,EAAsC;AACrC;AACAJ,QAAAA,KAAK,GAAG,EAAR;AACA,OAHD,MAGO;AACN;AACAA,QAAAA,KAAK,GAAGA,KAAK,CAACK,GAAN,CAAW,UAAUC,QAAV,EAAqB;AACvC,iBAAO,OAAOA,QAAP,GAAkB,CAAlB,GAAsBA,QAA7B;AACA,SAFO,EAEJH,IAFI,CAEE,GAFF,CAAR;AAGA;AACD,KA7BsD,CA+BvD;;;AACA,QAAK,OAAOH,KAAZ,EAAoB;AACnBT,MAAAA,MAAM,CAACgB,WAAP,GAAqB,EAArB;AACA;AACA;;AAEDpB,IAAAA,KAAK,CAACqB,OAAN,CAAe,UAAUC,IAAV,EAAiB;AAC/B,UAAIC,cAAJ;;AAEA,UAAKD,IAAI,CAACE,QAAL,IAAiBF,IAAI,CAACE,QAAL,CAAcC,IAApC,EAA2C;AAC1C,gBAASH,IAAI,CAACE,QAAL,CAAcC,IAAvB;AACC,eAAK,eAAL;AACC,gBAAK9B,SAAS,KAAK2B,IAAI,CAACE,QAAL,CAAcE,IAAd,CAAoB,CAApB,CAAnB,EAA6C;AAC5C;AACA;;AAED,kBAAMC,KAAK,GAAGL,IAAI,CAACE,QAAL,CAAcE,IAAd,CAAoB,CAApB,CAAd;;AAEA,gBAAKE,KAAK,CAAED,KAAF,CAAV,EAAsB;AACrB;AACA;;AAED,kBAAME,KAAK,GAAGhB,KAAK,CAACiB,KAAN,CAAa,GAAb,CAAd;AAEAjB,YAAAA,KAAK,GAAGlB,SAAS,KAAKkC,KAAK,CAAEF,KAAF,CAAnB,GAA+BE,KAAK,CAAEF,KAAF,CAApC,GAAgD,EAAxD;AACA;;AAED,eAAK,kBAAL;AACC,gBAAKhC,SAAS,KAAK2B,IAAI,CAACE,QAAL,CAAcE,IAAd,CAAoB,CAApB,CAAnB,EAA6C;AAC5C;AACA;;AAED,kBAAMK,KAAK,GAAGT,IAAI,CAACE,QAAL,CAAcE,IAAd,CAAoB,CAApB,CAAd;;AAEA,gBAAKE,KAAK,CAAEG,KAAF,CAAV,EAAsB;AACrB;AACA;;AAED,kBAAMC,KAAK,GAAGnB,KAAK,CAACiB,KAAN,CAAa,GAAb,CAAd;AACA,gBAAIG,QAAJ;AAEAD,YAAAA,KAAK,CAACX,OAAN,CAAe,UAAUa,IAAV,EAAgBC,CAAhB,EAAoB;AAClC,oBAAMC,MAAM,GAAGC,UAAU,CAAEH,IAAF,CAAzB;AACA,oBAAMI,IAAI,GAAGJ,IAAI,CAACK,OAAL,CAAcH,MAAd,EAAsB,EAAtB,CAAb;AAEAH,cAAAA,QAAQ,CAAEE,CAAF,CAAR,GAAgB,CAAEC,MAAM,GAAGL,KAAX,EAAmBS,QAAnB,KAAgCF,IAAhD;AACA,aALD,EAdD,CAqBC;;AACAzB,YAAAA,KAAK,GAAGoB,QAAQ,CAACjB,IAAT,CAAe,GAAf,CAAR;AACA;AAxCF;AA0CA;;AAED,UAAKrB,SAAS,KAAK2B,IAAI,CAACmB,OAAnB,IAA8B9C,SAAS,KAAK2B,IAAI,CAACoB,QAAtD,EAAiE;AAChE;AACA;;AAEDpB,MAAAA,IAAI,CAACqB,KAAL,GAAarB,IAAI,CAACqB,KAAL,IAAc,QAA3B;AACArB,MAAAA,IAAI,CAACsB,OAAL,GAAetB,IAAI,CAACsB,OAAL,IAAgB,GAA/B,CArD+B,CAuD/B;;AACA,UAAK,aAAa,OAAO/B,KAAzB,EAAiC;AAChC,YAAKlB,SAAS,KAAK2B,IAAI,CAACvB,GAAnB,IAA0BJ,SAAS,KAAKkB,KAAK,CAAES,IAAI,CAACvB,GAAP,CAAlD,EAAiE;AAChE;AACAwB,UAAAA,cAAc,GAAGD,IAAI,CAACsB,OAAL,CAAaL,OAAb,CAAsB,GAAtB,EAA2B1B,KAAK,CAAES,IAAI,CAACvB,GAAP,CAAhC,CAAjB;AACA,SAHD,MAGO;AACN,cAAI8C,WAAJ;AACAhC,UAAAA,KAAK,CAACQ,OAAN,CAAe,UAAUyB,SAAV,EAAsB;AACpCD,YAAAA,WAAW,CAACE,IAAZ,CAAkBzB,IAAI,CAACsB,OAAL,CAAaL,OAAb,CAAsB,GAAtB,EAA2BO,SAA3B,CAAlB;AACA,WAFD;AAGAvB,UAAAA,cAAc,GAAGsB,WAAW,CAAC7B,IAAZ,CAAkB,GAAlB,CAAjB;AACA;AACD,OAXD,MAWO;AACN;AACAO,QAAAA,cAAc,GAAGD,IAAI,CAACsB,OAAL,CAAaL,OAAb,CAAsB,GAAtB,EAA2B1B,KAA3B,CAAjB;AACA,OAtE8B,CAwE/B;;;AACA,UAAKlB,SAAS,KAAKQ,QAAQ,CAAEmB,IAAI,CAACqB,KAAP,CAA3B,EAA4C;AAC3CxC,QAAAA,QAAQ,CAAEmB,IAAI,CAACqB,KAAP,CAAR,GAAyB,EAAzB;AACA;;AACD,UAAKhD,SAAS,KAAKQ,QAAQ,CAAEmB,IAAI,CAACqB,KAAP,CAAR,CAAwBrB,IAAI,CAACmB,OAA7B,CAAnB,EAA4D;AAC3DtC,QAAAA,QAAQ,CAAEmB,IAAI,CAACqB,KAAP,CAAR,CAAwBrB,IAAI,CAACmB,OAA7B,IAAyC,EAAzC;AACA,OA9E8B,CAgF/B;;;AACAtC,MAAAA,QAAQ,CAAEmB,IAAI,CAACqB,KAAP,CAAR,CAAwBrB,IAAI,CAACmB,OAA7B,EAAwCnB,IAAI,CAACoB,QAA7C,IAA0DnB,cAA1D;AACA,KAlFD,EArCuD,CAyHvD;;AACAyB,IAAAA,MAAM,CAACC,IAAP,CAAa9C,QAAb,EAAwBkB,OAAxB,CAAiC,UAAUsB,KAAV,EAAkB;AAClD,YAAMO,SAAS,GAAG/C,QAAQ,CAAEwC,KAAF,CAA1B;;AAEA,UAAK,aAAaA,KAAlB,EAA0B;AACzBpC,QAAAA,GAAG,IAAIoC,KAAK,GAAG,GAAf;AACA;;AAEDK,MAAAA,MAAM,CAACC,IAAP,CAAaC,SAAb,EAAyB7B,OAAzB,CAAkC,UAAU8B,QAAV,EAAqB;AACtD,cAAMC,UAAU,GAAGF,SAAS,CAAEC,QAAF,CAA5B;AAEA5C,QAAAA,GAAG,IAAI4C,QAAQ,GAAG,GAAlB;AAEAH,QAAAA,MAAM,CAACC,IAAP,CAAaG,UAAb,EAA0B/B,OAA1B,CAAmC,UAAUqB,QAAV,EAAqB;AACvD,gBAAMW,SAAS,GAAGD,UAAU,CAAEV,QAAF,CAA5B;AAEAnC,UAAAA,GAAG,IAAImC,QAAQ,GAAG,GAAX,GAAiBW,SAAjB,GAA6B,GAApC;AACA,SAJD;AAMA9C,QAAAA,GAAG,IAAI,GAAP;AACA,OAZD;;AAcA,UAAK,aAAaoC,KAAlB,EAA0B;AACzBpC,QAAAA,GAAG,IAAI,GAAP;AACA;AACD,KAxBD,EA1HuD,CAoJvD;;AACAH,IAAAA,MAAM,CAACgB,WAAP,GAAqBb,GAArB;AACA,GAtJD;AAwJA;AACD;AACA;AACA;AACA;AACA;AACA;;;AACC,QAAM+C,gBAAgB,GAAG,UAAUvD,GAAV,EAAeC,KAAf,EAAsBC,QAAtB,EAAiC;AACzDD,IAAAA,KAAK,CAACqB,OAAN,CAAe,UAAUC,IAAV,EAAiB;AAC/B,UAAIT,KAAK,GAAGZ,QAAZ;;AAEA,UAAK,cAAc,OAASY,KAA5B,EAAsC;AACrCA,QAAAA,KAAK,GAAGA,KAAK,GAAG,CAAH,GAAO,CAApB;AACA;;AAED,UAAKlB,SAAS,KAAK2B,IAAI,CAACmB,OAAxB,EAAkC;AACjC;AACA;;AAEDnB,MAAAA,IAAI,CAACsB,OAAL,GAAetB,IAAI,CAACsB,OAAL,IAAgB,GAA/B;AAEA,YAAMW,QAAQ,GAAG,CAAE,GAAGlD,QAAQ,CAACmD,gBAAT,CAA2BlC,IAAI,CAACmB,OAAhC,CAAL,CAAjB;AACA,YAAMgB,KAAK,GAAG,IAAIC,MAAJ,CAAYpC,IAAI,CAACsB,OAAL,CAAaL,OAAb,CAAsB,GAAtB,EAA2B,WAA3B,CAAZ,EAAsD,GAAtD,CAAd;AACA,YAAMhB,cAAc,GAAGD,IAAI,CAACsB,OAAL,CAAaL,OAAb,CAAsB,GAAtB,EAA2B1B,KAA3B,CAAvB,CAf+B,CAiB/B;;AACA0C,MAAAA,QAAQ,CAAClC,OAAT,CAAkB,UAAUoB,OAAV,EAAoB;AACrC,YAAKA,OAAO,CAACkB,SAAR,CAAkBC,KAAlB,CAAyBH,KAAzB,CAAL,EAAwC;AACvChB,UAAAA,OAAO,CAACkB,SAAR,GAAoBlB,OAAO,CAACkB,SAAR,CAAkBpB,OAAlB,CAA2BkB,KAA3B,EAAkClC,cAAlC,CAApB;AACA,SAFD,MAEO;AACNkB,UAAAA,OAAO,CAACkB,SAAR,IAAqB,MAAMpC,cAA3B;AACA;AACD,OAND;AAOA,KAzBD;AA0BA,GA3BD;AA6BA;AACD;AACA;AACA;AACA;AACA;AACA;;;AACC,QAAMsC,eAAe,GAAG,UAAU9D,GAAV,EAAeC,KAAf,EAAsBC,QAAtB,EAAiC;AACxDD,IAAAA,KAAK,CAACqB,OAAN,CAAe,UAAUC,IAAV,EAAiB;AAC/B,YAAMT,KAAK,GAAGZ,QAAd;;AAEA,UAAKN,SAAS,KAAK2B,IAAI,CAACmB,OAAxB,EAAkC;AACjC;AACA;;AAEDnB,MAAAA,IAAI,CAACsB,OAAL,GAAetB,IAAI,CAACsB,OAAL,IAAgB,GAA/B;AAEA,YAAMW,QAAQ,GAAG,CAAE,GAAGlD,QAAQ,CAACmD,gBAAT,CAA2BlC,IAAI,CAACmB,OAAhC,CAAL,CAAjB;AACA,YAAMlB,cAAc,GAAGD,IAAI,CAACsB,OAAL,CAAaL,OAAb,CAAsB,GAAtB,EAA2B1B,KAA3B,CAAvB,CAV+B,CAY/B;;AACA0C,MAAAA,QAAQ,CAAClC,OAAT,CAAkB,UAAUoB,OAAV,EAAoB;AACrC,YAAK9C,SAAS,KAAK2B,IAAI,CAACoB,QAAxB,EAAmC;AAClCD,UAAAA,OAAO,CAACqB,YAAR,CAAsBxC,IAAI,CAACoB,QAA3B,EAAqCnB,cAArC;AACA,SAFD,MAEO;AACNkB,UAAAA,OAAO,CAACsB,SAAR,GAAoBxC,cAApB;AACA;AACD,OAND;AAOA,KApBD;AAqBA,GAtBD;AAwBA;AACD;AACA;AACA;AACA;AACA;AACA;;;AACC,QAAMyC,eAAe,GAAG,UAAUjE,GAAV,EAAeC,KAAf,EAAsBC,QAAtB,EAAiC;AACxD;AACA,QAAK,CAAC,CAAD,KAAOA,QAAQ,CAACgE,OAAT,CAAkB,GAAlB,CAAZ,EAAsC;AACrChE,MAAAA,QAAQ,GAAGA,QAAQ,CAACsC,OAAT,CAAkB,SAAlB,EAA6B,EAA7B,CAAX;AACA;;AAED,UAAM2B,SAAS,GAAGtE,yBAAyB,CAACuE,KAA1B,CAAiClE,QAAjC,KAA+C,EAAjE,CANwD,CAQxD;;AACAH,IAAAA,cAAc,CAAEC,GAAF,EAAOC,KAAP,EAAckE,SAAd,CAAd;AACA,GAVD;;AAYAlB,EAAAA,MAAM,CAACC,IAAP,CAAarD,yBAAyB,CAACC,YAAvC,EAAsDwB,OAAtD,CAA+D,UAAUtB,GAAV,EAAgB;AAC9E,UAAMqE,mBAAmB,GAAGxE,yBAAyB,CAACC,YAA1B,CAAwCE,GAAxC,CAA5B;AACA,UAAMsE,yBAAyB,GAAG,EAAlC;AAEAD,IAAAA,mBAAmB,CAAC/C,OAApB,CAA6B,UAAUC,IAAV,EAAiB;AAC7C,YAAMZ,IAAI,GAAGY,IAAI,CAACZ,IAAlB;;AAEA,UAAKf,SAAS,KAAK0E,yBAAyB,CAAE3D,IAAF,CAA5C,EAAuD;AACtD2D,QAAAA,yBAAyB,CAAE3D,IAAF,CAAzB,GAAoC,EAApC;AACA;;AAED2D,MAAAA,yBAAyB,CAAE3D,IAAF,CAAzB,CAAkCqC,IAAlC,CAAwCzB,IAAxC;AACA,KARD;AAUAgD,IAAAA,EAAE,CAACC,SAAH,CAAcxE,GAAd,EAAmB,UAAUyE,OAAV,EAAoB;AACtC;AACAA,MAAAA,OAAO,CAACC,IAAR,CAAc,UAAU5D,KAAV,EAAkB;AAC/B;AACAmC,QAAAA,MAAM,CAACC,IAAP,CAAaoB,yBAAb,EAAyChD,OAAzC,CAAkD,UAAUX,IAAV,EAAiB;AAClE,kBAASA,IAAT;AACC,iBAAK,KAAL;AACCZ,cAAAA,cAAc,CAAEC,GAAF,EAAOsE,yBAAyB,CAAE3D,IAAF,CAAhC,EAA0CG,KAA1C,CAAd;AACA;;AAED,iBAAK,OAAL;AACCyC,cAAAA,gBAAgB,CAAEvD,GAAF,EAAOsE,yBAAyB,CAAE3D,IAAF,CAAhC,EAA0CG,KAA1C,CAAhB;AACA;;AAED,iBAAK,MAAL;AACCgD,cAAAA,eAAe,CAAE9D,GAAF,EAAOsE,yBAAyB,CAAE3D,IAAF,CAAhC,EAA0CG,KAA1C,CAAf;AACA;;AAED,iBAAK,MAAL;AACCmD,cAAAA,eAAe,CAAEjE,GAAF,EAAOsE,yBAAyB,CAAE3D,IAAF,CAAhC,EAA0CG,KAA1C,CAAf;AACA;AAfF;AAiBA,SAlBD;AAmBA,OArBD;AAsBA,KAxBD;AAyBA,GAvCD;AAwCA;AAED;AACA;AACA;;;AACAR,QAAQ,CAACqE,gBAAT,CAA2B,kBAA3B,EAA+C,YAAW;AACzD,MAAK,gBAAgB,OAAOJ,EAAvB,IAA6BA,EAAE,CAACC,SAAhC,IAA6CD,EAAE,CAACC,SAAH,CAAaI,gBAA1D,IAA8EL,EAAE,CAACC,SAAH,CAAaK,cAA3F,IAA6GN,EAAE,CAACC,SAAH,CAAaK,cAAb,CAA4BC,aAA9I,EAA8J;AAC7JP,IAAAA,EAAE,CAACC,SAAH,CAAaI,gBAAb,CAA8BF,IAA9B,CAAoC,0BAApC,EAAgE,UAAUK,SAAV,EAAsB;AACrF;AACA,UAAKA,SAAS,CAACC,OAAV,CAAkBtE,EAAlB,CAAqBwD,OAArB,CAA8B,mBAA9B,CAAL,EAA2D;AAC1De,QAAAA,IAAI,CAACC,OAAL;AACA;AACD,KALD;AAMA;AACD,CATD,E","sources":["webpack://suki/./src/scripts/customizer-preview.js"],"sourcesContent":["/**\n * Customizer Preview's post messages\n */\nif ( undefined !== sukiCustomizerPreviewData && undefined !== sukiCustomizerPreviewData.postMessages ) {\n\t/**\n\t * PostMessage: Output CSS.\n\t *\n\t * @param {string} key\n\t * @param {Array}  rules\n\t * @param {string} newValue\n\t */\n\tconst postMessageCSS = function( key, rules, newValue ) {\n\t\tconst styleID = 'suki-customize-preview-css-' + key;\n\t\tconst cssArray = {};\n\t\tlet $style = document.getElementById( styleID );\n\t\tlet css = '';\n\n\t\t// Create <style> tag if doesn't exist.\n\t\tif ( ! $style ) {\n\t\t\t$style = document.createElement( 'style' );\n\t\t\t$style.id = styleID;\n\t\t\t$style.type = 'text/css';\n\n\t\t\t// Append <style> tag to <head>.\n\t\t\tdocument.head.appendChild( $style );\n\t\t}\n\n\t\tlet value = newValue;\n\n\t\t// Convert array value into string.\n\t\tif ( Array.isArray( value ) ) {\n\t\t\tif ( '' === value.join( '' ).trim() ) {\n\t\t\t\t// If all values are empty then set value to empty string.\n\t\t\t\tvalue = '';\n\t\t\t} else {\n\t\t\t\t// If one of the values are not empty, iterate through the values and convert every empty string to '0'.\n\t\t\t\tvalue = value.map( function( subValue ) {\n\t\t\t\t\treturn '' === subValue ? 0 : subValue;\n\t\t\t\t} ).join( ' ' );\n\t\t\t}\n\t\t}\n\n\t\t// If value is an empty string, reset CSS and then abort.\n\t\tif ( '' === value ) {\n\t\t\t$style.textContent = '';\n\t\t\treturn;\n\t\t}\n\n\t\trules.forEach( function( rule ) {\n\t\t\tlet formattedValue;\n\n\t\t\tif ( rule.function && rule.function.name ) {\n\t\t\t\tswitch ( rule.function.name ) {\n\t\t\t\t\tcase 'explode_value':\n\t\t\t\t\t\tif ( undefined === rule.function.args[ 0 ] ) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst index = rule.function.args[ 0 ];\n\n\t\t\t\t\t\tif ( isNaN( index ) ) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst array = value.split( ' ' );\n\n\t\t\t\t\t\tvalue = undefined !== array[ index ] ? array[ index ] : '';\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'scale_dimensions':\n\t\t\t\t\t\tif ( undefined === rule.function.args[ 0 ] ) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst scale = rule.function.args[ 0 ];\n\n\t\t\t\t\t\tif ( isNaN( scale ) ) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst parts = value.split( ' ' );\n\t\t\t\t\t\tlet newParts;\n\n\t\t\t\t\t\tparts.forEach( function( part, i ) {\n\t\t\t\t\t\t\tconst number = parseFloat( part );\n\t\t\t\t\t\t\tconst unit = part.replace( number, '' );\n\n\t\t\t\t\t\t\tnewParts[ i ] = ( number * scale ).toString() + unit;\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t// Build new value.\n\t\t\t\t\t\tvalue = newParts.join( ' ' );\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( undefined === rule.element || undefined === rule.property ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\trule.media = rule.media || 'global';\n\t\t\trule.pattern = rule.pattern || '$';\n\n\t\t\t// Check if \"key\" attribute is defined and value is an assosiative array.\n\t\t\tif ( 'object' === typeof value ) {\n\t\t\t\tif ( undefined !== rule.key && undefined !== value[ rule.key ] ) {\n\t\t\t\t\t// Fetch the property value using the key from setting value.\n\t\t\t\t\tformattedValue = rule.pattern.replace( '$', value[ rule.key ] );\n\t\t\t\t} else {\n\t\t\t\t\tlet concatValue;\n\t\t\t\t\tvalue.forEach( function( valueItem ) {\n\t\t\t\t\t\tconcatValue.push( rule.pattern.replace( '$', valueItem ) );\n\t\t\t\t\t} );\n\t\t\t\t\tformattedValue = concatValue.join( ' ' );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Define new value based on the specified pattern.\n\t\t\t\tformattedValue = rule.pattern.replace( '$', value );\n\t\t\t}\n\n\t\t\t// Define properties.\n\t\t\tif ( undefined === cssArray[ rule.media ] ) {\n\t\t\t\tcssArray[ rule.media ] = {};\n\t\t\t}\n\t\t\tif ( undefined === cssArray[ rule.media ][ rule.element ] ) {\n\t\t\t\tcssArray[ rule.media ][ rule.element ] = {};\n\t\t\t}\n\n\t\t\t// Save the value into a formatted array.\n\t\t\tcssArray[ rule.media ][ rule.element ][ rule.property ] = formattedValue;\n\t\t} );\n\n\t\t// Loop into the sorted array to build CSS string.\n\t\tObject.keys( cssArray ).forEach( function( media ) {\n\t\t\tconst selectors = cssArray[ media ];\n\n\t\t\tif ( 'global' !== media ) {\n\t\t\t\tcss += media + '{';\n\t\t\t}\n\n\t\t\tObject.keys( selectors ).forEach( function( selector ) {\n\t\t\t\tconst properties = selectors[ selector ];\n\n\t\t\t\tcss += selector + '{';\n\n\t\t\t\tObject.keys( properties ).forEach( function( property ) {\n\t\t\t\t\tconst propValue = properties[ property ];\n\n\t\t\t\t\tcss += property + ':' + propValue + ';';\n\t\t\t\t} );\n\n\t\t\t\tcss += '}';\n\t\t\t} );\n\n\t\t\tif ( 'global' !== media ) {\n\t\t\t\tcss += '}';\n\t\t\t}\n\t\t} );\n\n\t\t// Add CSS string to <style> tag.\n\t\t$style.textContent = css;\n\t};\n\n\t/**\n\t * PostMessage: Change class.\n\t *\n\t * @param {string} key\n\t * @param {Array}  rules\n\t * @param {string} newValue\n\t */\n\tconst postMessageClass = function( key, rules, newValue ) {\n\t\trules.forEach( function( rule ) {\n\t\t\tlet value = newValue;\n\n\t\t\tif ( 'boolean' === typeof ( value ) ) {\n\t\t\t\tvalue = value ? 1 : 0;\n\t\t\t}\n\n\t\t\tif ( undefined === rule.element ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\trule.pattern = rule.pattern || '$';\n\n\t\t\tconst elements = [ ...document.querySelectorAll( rule.element ) ];\n\t\t\tconst regex = new RegExp( rule.pattern.replace( '$', '[\\\\w\\\\-]+' ), 'i' );\n\t\t\tconst formattedValue = rule.pattern.replace( '$', value );\n\n\t\t\t// Change class on all targeted elements.\n\t\t\telements.forEach( function( element ) {\n\t\t\t\tif ( element.className.match( regex ) ) {\n\t\t\t\t\telement.className = element.className.replace( regex, formattedValue );\n\t\t\t\t} else {\n\t\t\t\t\telement.className += ' ' + formattedValue;\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t};\n\n\t/**\n\t * PostMessage: Change HTML.\n\t *\n\t * @param {string} key\n\t * @param {Array}  rules\n\t * @param {string} newValue\n\t */\n\tconst postMessageHTML = function( key, rules, newValue ) {\n\t\trules.forEach( function( rule ) {\n\t\t\tconst value = newValue;\n\n\t\t\tif ( undefined === rule.element ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\trule.pattern = rule.pattern || '$';\n\n\t\t\tconst elements = [ ...document.querySelectorAll( rule.element ) ];\n\t\t\tconst formattedValue = rule.pattern.replace( '$', value );\n\n\t\t\t// Change innerHTML on all targeted elements.\n\t\t\telements.forEach( function( element ) {\n\t\t\t\tif ( undefined !== rule.property ) {\n\t\t\t\t\telement.setAttribute( rule.property, formattedValue );\n\t\t\t\t} else {\n\t\t\t\t\telement.innerHTML = formattedValue;\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t};\n\n\t/**\n\t * PostMessage: Embed font to page and set font-family CSS.\n\t *\n\t * @param {string} key\n\t * @param {Array}  rules\n\t * @param {string} newValue\n\t */\n\tconst postMessageFont = function( key, rules, newValue ) {\n\t\t// Fallback compatibility for prior v2.\n\t\tif ( -1 !== newValue.indexOf( '|' ) ) {\n\t\t\tnewValue = newValue.replace( '/.*?\\|/', '' );\n\t\t}\n\n\t\tconst fontStack = sukiCustomizerPreviewData.fonts[ newValue ] || '';\n\n\t\t// Change CSS value.\n\t\tpostMessageCSS( key, rules, fontStack );\n\t};\n\n\tObject.keys( sukiCustomizerPreviewData.postMessages ).forEach( function( key ) {\n\t\tconst settingPostMessages = sukiCustomizerPreviewData.postMessages[ key ];\n\t\tconst settingPostMessagesByType = {};\n\n\t\tsettingPostMessages.forEach( function( rule ) {\n\t\t\tconst type = rule.type;\n\n\t\t\tif ( undefined === settingPostMessagesByType[ type ] ) {\n\t\t\t\tsettingPostMessagesByType[ type ] = [];\n\t\t\t}\n\n\t\t\tsettingPostMessagesByType[ type ].push( rule );\n\t\t} );\n\n\t\twp.customize( key, function( setting ) {\n\t\t\t// Bind setting value change.\n\t\t\tsetting.bind( function( value ) {\n\t\t\t\t// Process each postMessages type (CSS, class, HTML, font).\n\t\t\t\tObject.keys( settingPostMessagesByType ).forEach( function( type ) {\n\t\t\t\t\tswitch ( type ) {\n\t\t\t\t\t\tcase 'css':\n\t\t\t\t\t\t\tpostMessageCSS( key, settingPostMessagesByType[ type ], value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'class':\n\t\t\t\t\t\t\tpostMessageClass( key, settingPostMessagesByType[ type ], value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'html':\n\t\t\t\t\t\t\tpostMessageHTML( key, settingPostMessagesByType[ type ], value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'font':\n\t\t\t\t\t\t\tpostMessageFont( key, settingPostMessagesByType[ type ], value );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t} );\n\t\t} );\n\t} );\n}\n\n/**\n * Reinit frontend JS after partial refresh\n */\ndocument.addEventListener( 'DOMContentLoaded', function() {\n\tif ( 'undefined' !== typeof wp && wp.customize && wp.customize.selectiveRefresh && wp.customize.widgetsPreview && wp.customize.widgetsPreview.WidgetPartial ) {\n\t\twp.customize.selectiveRefresh.bind( 'partial-content-rendered', function( placement ) {\n\t\t\t// Nav Menu\n\t\t\tif ( placement.partial.id.indexOf( 'nav_menu_instance' ) ) {\n\t\t\t\tsuki.initAll();\n\t\t\t}\n\t\t} );\n\t}\n} );\n"],"names":["undefined","sukiCustomizerPreviewData","postMessages","postMessageCSS","key","rules","newValue","styleID","cssArray","$style","document","getElementById","css","createElement","id","type","head","appendChild","value","Array","isArray","join","trim","map","subValue","textContent","forEach","rule","formattedValue","function","name","args","index","isNaN","array","split","scale","parts","newParts","part","i","number","parseFloat","unit","replace","toString","element","property","media","pattern","concatValue","valueItem","push","Object","keys","selectors","selector","properties","propValue","postMessageClass","elements","querySelectorAll","regex","RegExp","className","match","postMessageHTML","setAttribute","innerHTML","postMessageFont","indexOf","fontStack","fonts","settingPostMessages","settingPostMessagesByType","wp","customize","setting","bind","addEventListener","selectiveRefresh","widgetsPreview","WidgetPartial","placement","partial","suki","initAll"],"sourceRoot":""}