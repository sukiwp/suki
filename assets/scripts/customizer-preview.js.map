{"version":3,"file":"customizer-preview.js","mappings":"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","sources":["webpack://suki/./src/scripts/customizer-preview.js"],"sourcesContent":["/**\n * Customizer Preview's post messages\n */\nif ( undefined !== sukiCustomizerPreviewData && undefined !== sukiCustomizerPreviewData.postMessages ) {\n\t/**\n\t * Parse CSS value.\n\t *\n\t * @param {string|boolean|Array} value\n\t * @return {string} String CSS value.\n\t */\n\tconst parseCSSValue = function( value ) {\n\t\tswitch ( typeof ( value ) ) {\n\t\t\tcase 'boolean':\n\t\t\t\tvalue = value ? 1 : 0;\n\t\t\t\tbreak;\n\n\t\t\tcase 'object': // Array is considered as `object` by `typeof` function.\n\t\t\t\tif ( Array.isArray( value ) ) { // Make sure it only works for array type.\n\t\t\t\t\tif ( '' === value.join( '' ).trim() ) {\n\t\t\t\t\t\t// If all values are empty then set value to empty string.\n\t\t\t\t\t\tvalue = '';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// If one of the values are not empty, iterate through the values and convert every empty string to '0'.\n\t\t\t\t\t\tvalue = value.map( function( subValue ) {\n\t\t\t\t\t\t\treturn '' === subValue ? 0 : subValue;\n\t\t\t\t\t\t} ).join( ' ' );\n\t\t\t\t\t}\n\t\t\t\t} else { // Other object type will return empty string.\n\t\t\t\t\tvalue = '';\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn value;\n\t};\n\n\t/**\n\t * Parse rule function value.\n\t *\n\t * @param {string} value\n\t * @param {Object} functionObj\n\t * @return {string} String CSS value.\n\t */\n\tconst parseRuleFunctionValue = function( value, functionObj = undefined ) {\n\t\tif ( undefined === functionObj ) {\n\t\t\treturn value;\n\t\t}\n\n\t\tif ( functionObj.name ) {\n\t\t\tswitch ( functionObj.name ) {\n\t\t\t\tcase 'explode_value':\n\t\t\t\t\tif ( undefined === functionObj.args[ 0 ] ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst index = functionObj.args[ 0 ];\n\n\t\t\t\t\tif ( isNaN( index ) ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst array = value.split( ' ' );\n\n\t\t\t\t\tvalue = undefined !== array[ index ] ? array[ index ] : '';\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t};\n\n\t/**\n\t * PostMessage: Output CSS.\n\t *\n\t * @param {string} key\n\t * @param {Array}  rules\n\t * @param {string} newValue\n\t */\n\tconst postMessageCSS = function( key, rules, newValue ) {\n\t\tconst styleID = 'suki-customize-preview-css-' + key;\n\t\tconst cssArray = {};\n\t\tlet $style = document.getElementById( styleID );\n\t\tlet css = '';\n\n\t\t// Create <style> tag if doesn't exist.\n\t\tif ( ! $style ) {\n\t\t\t$style = document.createElement( 'style' );\n\t\t\t$style.id = styleID;\n\t\t\t$style.type = 'text/css';\n\n\t\t\t// Append <style> tag to <head>.\n\t\t\tdocument.head.appendChild( $style );\n\t\t}\n\n\t\tconst value = parseCSSValue( newValue );\n\n\t\t// If value is an empty string, reset CSS and then abort.\n\t\tif ( '' === value ) {\n\t\t\t$style.textContent = '';\n\t\t\treturn;\n\t\t}\n\n\t\trules.forEach( function( rule ) {\n\t\t\tif ( undefined === rule.element || undefined === rule.property ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Use fallback value for `media` and `pattern` rule attributes.\n\t\t\trule.media = rule.media || 'global';\n\t\t\trule.pattern = rule.pattern || '$';\n\n\t\t\tlet currentRuleValue = parseRuleFunctionValue( value, rule.function );\n\n\t\t\tcurrentRuleValue = rule.pattern.replace( '$', currentRuleValue );\n\n\t\t\t// Define properties.\n\t\t\tif ( undefined === cssArray[ rule.media ] ) {\n\t\t\t\tcssArray[ rule.media ] = {};\n\t\t\t}\n\t\t\tif ( undefined === cssArray[ rule.media ][ rule.element ] ) {\n\t\t\t\tcssArray[ rule.media ][ rule.element ] = {};\n\t\t\t}\n\n\t\t\t// Save the value into a formatted array.\n\t\t\tcssArray[ rule.media ][ rule.element ][ rule.property ] = currentRuleValue;\n\t\t} );\n\n\t\t// Loop into the sorted array to build CSS string.\n\t\tObject.keys( cssArray ).forEach( function( media ) {\n\t\t\tconst selectors = cssArray[ media ];\n\n\t\t\tif ( 'global' !== media ) {\n\t\t\t\tcss += media + '{';\n\t\t\t}\n\n\t\t\tObject.keys( selectors ).forEach( function( selector ) {\n\t\t\t\tconst properties = selectors[ selector ];\n\n\t\t\t\tcss += selector + '{';\n\n\t\t\t\tObject.keys( properties ).forEach( function( property ) {\n\t\t\t\t\tconst propValue = properties[ property ];\n\n\t\t\t\t\tcss += property + ':' + propValue + ';';\n\t\t\t\t} );\n\n\t\t\t\tcss += '}';\n\t\t\t} );\n\n\t\t\tif ( 'global' !== media ) {\n\t\t\t\tcss += '}';\n\t\t\t}\n\t\t} );\n\n\t\t// Add CSS string to <style> tag.\n\t\t$style.textContent = css;\n\t};\n\n\t/**\n\t * PostMessage: Change class.\n\t *\n\t * @param {string} key\n\t * @param {Array}  rules\n\t * @param {string} newValue\n\t */\n\tconst postMessageClass = function( key, rules, newValue ) {\n\t\tconst value = parseCSSValue( newValue );\n\n\t\trules.forEach( function( rule ) {\n\t\t\tif ( undefined === rule.element ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\trule.pattern = rule.pattern || '$';\n\n\t\t\tlet currentRuleValue = parseRuleFunctionValue( value, rule.function );\n\n\t\t\tconst elements = [ ...document.querySelectorAll( rule.element ) ];\n\t\t\tconst regex = new RegExp( rule.pattern.replace( '$', '[\\\\w\\\\-]+' ), 'i' );\n\n\t\t\tcurrentRuleValue = rule.pattern.replace( '$', value );\n\n\t\t\t// Change class on all targeted elements.\n\t\t\telements.forEach( function( element ) {\n\t\t\t\tif ( element.className.match( regex ) ) {\n\t\t\t\t\telement.className = element.className.replace( regex, currentRuleValue );\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t};\n\n\t/**\n\t * PostMessage: Change inline CSS in \"style\" attribute.\n\t *\n\t * @param {string} key\n\t * @param {Array}  rules\n\t * @param {string} newValue\n\t */\n\tconst postMessageStyle = function( key, rules, newValue ) {\n\t\tconst value = parseCSSValue( newValue );\n\n\t\trules.forEach( function( rule ) {\n\t\t\tif ( undefined === rule.element ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\trule.pattern = rule.pattern || '$';\n\n\t\t\tlet currentRuleValue = parseRuleFunctionValue( value, rule.function );\n\n\t\t\tconst elements = [ ...document.querySelectorAll( rule.element ) ];\n\t\t\tconst isImportant = rule.pattern.endsWidth( ' !important' );\n\n\t\t\tcurrentRuleValue = rule.pattern.replace( '$', value );\n\n\t\t\tif ( isImportant ) {\n\t\t\t\tcurrentRuleValue = currentRuleValue.replace( ' !important', '' );\n\t\t\t}\n\n\t\t\t// Change class on all targeted elements.\n\t\t\telements.forEach( function( element ) {\n\t\t\t\tif ( undefined !== rule.property ) {\n\t\t\t\t\telement.style.setProperty( rule.property, currentRuleValue, isImportant ? 'important' : '' );\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t};\n\n\t/**\n\t * PostMessage: Change HTML.\n\t *\n\t * @param {string} key\n\t * @param {Array}  rules\n\t * @param {string} newValue\n\t */\n\tconst postMessageHTML = function( key, rules, newValue ) {\n\t\trules.forEach( function( rule ) {\n\t\t\tconst value = newValue;\n\n\t\t\tif ( undefined === rule.element ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\trule.pattern = rule.pattern || '$';\n\n\t\t\tconst elements = [ ...document.querySelectorAll( rule.element ) ];\n\t\t\tconst formattedValue = rule.pattern.replace( '$', value );\n\n\t\t\t// Change innerHTML on all targeted elements.\n\t\t\telements.forEach( function( element ) {\n\t\t\t\tif ( undefined !== rule.property ) {\n\t\t\t\t\telement.setAttribute( rule.property, formattedValue );\n\t\t\t\t} else {\n\t\t\t\t\telement.innerHTML = formattedValue;\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\t};\n\n\t/**\n\t * PostMessage: Embed font to page and set font-family CSS.\n\t *\n\t * @param {string} key\n\t * @param {Array}  rules\n\t * @param {string} newValue\n\t */\n\tconst postMessageFont = function( key, rules, newValue ) {\n\t\t// Fallback compatibility for prior v2.\n\t\tif ( -1 !== newValue.indexOf( '|' ) ) {\n\t\t\tnewValue = newValue.replace( '/.*?\\|/', '' );\n\t\t}\n\n\t\tconst fontStack = sukiCustomizerPreviewData.fonts[ newValue ] || '';\n\n\t\t// Change CSS value.\n\t\tpostMessageCSS( key, rules, fontStack );\n\t};\n\n\tObject.keys( sukiCustomizerPreviewData.postMessages ).forEach( function( key ) {\n\t\tconst settingPostMessages = sukiCustomizerPreviewData.postMessages[ key ];\n\t\tconst settingPostMessagesByType = {};\n\n\t\tsettingPostMessages.forEach( function( rule ) {\n\t\t\tconst type = rule.type;\n\n\t\t\tif ( undefined === settingPostMessagesByType[ type ] ) {\n\t\t\t\tsettingPostMessagesByType[ type ] = [];\n\t\t\t}\n\n\t\t\tsettingPostMessagesByType[ type ].push( rule );\n\t\t} );\n\n\t\twp.customize( key, function( setting ) {\n\t\t\t// Bind setting value change.\n\t\t\tsetting.bind( function( value ) {\n\t\t\t\t// Process each postMessages type (CSS, class, HTML, font).\n\t\t\t\tObject.keys( settingPostMessagesByType ).forEach( function( type ) {\n\t\t\t\t\tswitch ( type ) {\n\t\t\t\t\t\tcase 'css':\n\t\t\t\t\t\t\tpostMessageCSS( key, settingPostMessagesByType[ type ], value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'class':\n\t\t\t\t\t\t\tpostMessageClass( key, settingPostMessagesByType[ type ], value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'style':\n\t\t\t\t\t\t\tpostMessageStyle( key, settingPostMessagesByType[ type ], value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'html':\n\t\t\t\t\t\t\tpostMessageHTML( key, settingPostMessagesByType[ type ], value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'font':\n\t\t\t\t\t\t\tpostMessageFont( key, settingPostMessagesByType[ type ], value );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t} );\n\t\t} );\n\t} );\n}\n\n/**\n * Reinit frontend JS after partial refresh\n */\ndocument.addEventListener( 'DOMContentLoaded', function() {\n\tif ( 'undefined' !== typeof wp && wp.customize && wp.customize.selectiveRefresh && wp.customize.widgetsPreview && wp.customize.widgetsPreview.WidgetPartial ) {\n\t\twp.customize.selectiveRefresh.bind( 'partial-content-rendered', function( placement ) {\n\t\t\t// Nav Menu\n\t\t\tif ( placement.partial.id.indexOf( 'nav_menu_instance' ) ) {\n\t\t\t\tsuki.initAll();\n\t\t\t}\n\t\t} );\n\t}\n} );\n"],"names":["undefined","sukiCustomizerPreviewData","postMessages","parseCSSValue","value","Array","isArray","join","trim","map","subValue","parseRuleFunctionValue","functionObj","name","args","index","isNaN","array","split","postMessageCSS","key","rules","newValue","styleID","cssArray","$style","document","getElementById","css","createElement","id","type","head","appendChild","textContent","forEach","rule","element","property","media","pattern","currentRuleValue","function","replace","Object","keys","selectors","selector","properties","propValue","postMessageClass","elements","querySelectorAll","regex","RegExp","className","match","postMessageStyle","isImportant","endsWidth","style","setProperty","postMessageHTML","formattedValue","setAttribute","innerHTML","postMessageFont","indexOf","fontStack","fonts","settingPostMessages","settingPostMessagesByType","push","wp","customize","setting","bind","addEventListener","selectiveRefresh","widgetsPreview","WidgetPartial","placement","partial","suki","initAll"],"sourceRoot":""}